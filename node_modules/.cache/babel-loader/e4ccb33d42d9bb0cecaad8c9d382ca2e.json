{"ast":null,"code":"import{observer}from\"mobx-react-lite\";import React from\"react\";import{Button,Table}from\"react-bootstrap\";import ModalComponent from\"../../components/Modal/Modal\";import{calculatorBMR}from\"../../store/CalculatorBMR/CalculatorBMR\";import{modalControll}from\"../../store/ModalControll/ModalControll\";import{DietContainer,Btn,DivButtons,DietElementsContainer,DietDayNameContainer,SingleDayDiet,SingleDivUnderText,H3Text,SingleMeal,NameOfMeal,Padding}from\"./ResultDescription.css\";import{diets}from\"./ResultDescriptionData\";import{BsCalendar}from\"react-icons/bs\";var ResultsDescription=observer(function(){var conditionDisplaying=function conditionDisplaying(dietFor){return calculatorBMR.resultBMR>dietFor.minKcal&&calculatorBMR.resultBMR<dietFor.maxKcal;};var dietForWeek=diets.map(function(dietFor){if(conditionDisplaying(dietFor)){return/*#__PURE__*/React.createElement(DietContainer,null,/*#__PURE__*/React.createElement(\"h1\",null,dietFor.name),/*#__PURE__*/React.createElement(DietElementsContainer,null,dietFor.day.map(function(days){return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(DietDayNameContainer,null,/*#__PURE__*/React.createElement(\"h1\",null,days.name),/*#__PURE__*/React.createElement(BsCalendar,null)),/*#__PURE__*/React.createElement(SingleDayDiet,null,days.meals.map(function(meal){return/*#__PURE__*/React.createElement(SingleMeal,null,/*#__PURE__*/React.createElement(H3Text,null,meal.nameOfMeal),/*#__PURE__*/React.createElement(SingleDivUnderText,null,/*#__PURE__*/React.createElement(NameOfMeal,null,meal.name),/*#__PURE__*/React.createElement(Padding,null,/*#__PURE__*/React.createElement(\"h4\",null,\"Sk\\u0142adniki:\"),/*#__PURE__*/React.createElement(Padding,null,/*#__PURE__*/React.createElement(Table,null,/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",{class:\"bg-warning\"},/*#__PURE__*/React.createElement(\"th\",null,\"Nazwa\"),/*#__PURE__*/React.createElement(\"th\",null,\"Gramy\"))),meal.ingredients.map(function(ingredient){return/*#__PURE__*/React.createElement(\"tbody\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,ingredient.name),/*#__PURE__*/React.createElement(\"td\",null,ingredient.grams)));}))),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h4\",null,\"Suma:\"),/*#__PURE__*/React.createElement(Table,null,/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",{class:\"bg-warning\"},/*#__PURE__*/React.createElement(\"th\",null,\"Kalorie\"),/*#__PURE__*/React.createElement(\"th\",null,\"Bia\\u0142ko\"),/*#__PURE__*/React.createElement(\"th\",null,\"W\\u0119glowodany\"),/*#__PURE__*/React.createElement(\"th\",null,\"T\\u0142uszcz\"))),/*#__PURE__*/React.createElement(\"tbody\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,meal.kcal),/*#__PURE__*/React.createElement(\"td\",null,meal.proteins),/*#__PURE__*/React.createElement(\"td\",null,meal.carbs),/*#__PURE__*/React.createElement(\"td\",null,meal.fats))))))));})));})));}});var dietList=diets.map(function(dietFor){if(conditionDisplaying(dietFor)){return/*#__PURE__*/React.createElement(Table,null,/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",{class:\"table-warning\"},/*#__PURE__*/React.createElement(\"th\",null,\"Nazwa \"),/*#__PURE__*/React.createElement(\"th\",null,\"Porcja\"))),/*#__PURE__*/React.createElement(\"tbody\",null,dietFor.allWeek.map(function(item){return/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,item.name),/*#__PURE__*/React.createElement(\"td\",null,item.portionName));})));}});return/*#__PURE__*/React.createElement(DivButtons,null,/*#__PURE__*/React.createElement(Btn,{onClick:function onClick(){return modalControll.openModal(\"demandProducts\");}},\"Sprawdz zaopatrzenie w produkty spo\\u017Cywcze na ca\\u0142y tydzie\\u0144\"),/*#__PURE__*/React.createElement(ModalComponent,{hideModal:function hideModal(){return modalControll.hideModal();},show:modalControll.isOpenModalName===\"demandProducts\",header:\"Produkty kt\\xF3re nale\\u017Cy posiada\\u0107\",footerComp:/*#__PURE__*/React.createElement(\"div\",null,\" \")},dietList),\"Twoja stara\",calculatorBMR.resultBMR,dietForWeek);});export default ResultsDescription;","map":{"version":3,"sources":["C:/Users/michal/Desktop/PRACA INMNZ/frontend/src/containers/ResultsDescription/ResultsDescription.js"],"names":["observer","React","Button","Table","ModalComponent","calculatorBMR","modalControll","DietContainer","Btn","DivButtons","DietElementsContainer","DietDayNameContainer","SingleDayDiet","SingleDivUnderText","H3Text","SingleMeal","NameOfMeal","Padding","diets","BsCalendar","ResultsDescription","conditionDisplaying","dietFor","resultBMR","minKcal","maxKcal","dietForWeek","map","name","day","days","meals","meal","nameOfMeal","ingredients","ingredient","grams","kcal","proteins","carbs","fats","dietList","allWeek","item","portionName","openModal","hideModal","isOpenModalName"],"mappings":"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","sourcesContent":["import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Button, Table } from \"react-bootstrap\";\nimport ModalComponent from \"../../components/Modal/Modal\";\nimport { calculatorBMR } from \"../../store/CalculatorBMR/CalculatorBMR\";\nimport { modalControll } from \"../../store/ModalControll/ModalControll\";\nimport { DietContainer, Btn, DivButtons, DietElementsContainer, DietDayNameContainer, SingleDayDiet, SingleDivUnderText, H3Text, SingleMeal, NameOfMeal, Padding } from \"./ResultDescription.css\";\nimport { diets } from \"./ResultDescriptionData\";\nimport { BsCalendar } from \"react-icons/bs\";\n\nconst ResultsDescription = observer(() => {\n\n    const conditionDisplaying = (dietFor) => calculatorBMR.resultBMR > dietFor.minKcal && calculatorBMR.resultBMR < dietFor.maxKcal\n\n    const dietForWeek = diets.map((dietFor) => {\n        if (conditionDisplaying(dietFor)) {\n            return (\n                <DietContainer>\n                    <h1>{dietFor.name}</h1>\n                    <DietElementsContainer>\n                        {dietFor.day.map((days) =>\n                            <div>\n                                <DietDayNameContainer>\n                                    <h1>\n                                        {days.name}\n                                    </h1>\n                                    <BsCalendar />\n                                </DietDayNameContainer>\n                                <SingleDayDiet>\n                                    {days.meals.map((meal) =>\n                                        <SingleMeal>\n                                            <H3Text>{meal.nameOfMeal}</H3Text>\n                                            <SingleDivUnderText>\n                                                <NameOfMeal>{meal.name}</NameOfMeal>\n                                                <Padding>\n                                                    <h4>Sk≈Çadniki:</h4>\n                                                    <Padding>\n                                                    <Table>\n                                                            <thead>\n                                                                <tr class=\"bg-warning\">\n                                                                    <th>Nazwa</th>\n                                                                    <th>Gramy</th>\n                                                                </tr>\n                                                            </thead>\n                                                            {meal.ingredients.map((ingredient) =>\n                                                                <tbody>\n                                                                    <tr>\n                                                                        <td>{ingredient.name}</td>\n                                                                        <td>{ingredient.grams}</td>\n                                                                    </tr>\n                                                                </tbody>\n                                                            )}\n                                                        </Table>\n                                                    </Padding>\n                                                    <div>\n                                                        <h4>Suma:</h4>\n                                                        <Table>\n                                                            <thead>\n                                                                <tr class=\"bg-warning\">\n                                                                    <th>Kalorie</th>\n                                                                    <th>Bia≈Çko</th>\n                                                                    <th>Wƒôglowodany</th>\n                                                                    <th>T≈Çuszcz</th>\n                                                                </tr>\n                                                            </thead>\n                                                            <tbody>\n                                                                <tr>\n                                                                    <td>{meal.kcal}</td>\n                                                                    <td>{meal.proteins}</td>\n                                                                    <td>{meal.carbs}</td>\n                                                                    <td>{meal.fats}</td>\n                                                                </tr>\n                                                            </tbody>\n                                                        </Table>\n                                                    </div>\n                                                </Padding>\n                                            </SingleDivUnderText>\n                                        </SingleMeal>\n                                    )}\n                                </SingleDayDiet>\n                            </div>\n                        )}\n                    </DietElementsContainer>\n                </DietContainer>\n            )\n        }\n    })\n\n    const dietList = diets.map((dietFor) => {\n        if (conditionDisplaying(dietFor)) {\n            return (\n                <Table>\n                    <thead>\n                    <tr class=\"table-warning\">\n                            <th>Nazwa </th>\n                            <th>Porcja</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {dietFor.allWeek.map((item) =>\n                            <tr>\n                                <td>{item.name}</td>\n                                <td>{item.portionName}</td>\n                            </tr>\n                        )}\n                    </tbody>\n                </Table>\n            )\n        }\n    })\n\n    return (\n        <DivButtons>\n            <Btn onClick={() => modalControll.openModal(\"demandProducts\")}>Sprawdz zaopatrzenie w produkty spo≈ºywcze na ca≈Çy tydzie≈Ñ</Btn>\n            <ModalComponent\n                hideModal={() => modalControll.hideModal()}\n                show={modalControll.isOpenModalName === \"demandProducts\"}\n                header=\"Produkty kt√≥re nale≈ºy posiadaƒá\"\n                footerComp={<div> </div>}\n            >\n                {dietList}\n            </ModalComponent>\n\n            Twoja stara{calculatorBMR.resultBMR}\n            {dietForWeek}\n        </DivButtons>\n    )\n})\n\nexport default ResultsDescription;"]},"metadata":{},"sourceType":"module"}