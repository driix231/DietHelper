{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\michal\\\\Desktop\\\\PRACA INMNZ\\\\frontend\\\\src\\\\containers\\\\BMRCounting\\\\BMRCounting.js\";\nimport { observer } from \"mobx-react-lite\";\nimport React, { useMemo, useState } from \"react\";\nimport Dropdown from \"../../components/AllAboutForm/Dropdown/Dropdown\";\nimport Form from \"../../components/AllAboutForm/Form/Form\";\nimport Input from \"../../components/AllAboutForm/Input/Input\";\nimport { calculatorBMR } from \"../../store/CalculatorBMR/CalculatorBMR\";\nimport { bmrData, countingBMR } from \"./BMRCountingData\";\nconst BMRCounting = observer(() => {\n  const [bmrItems, setBmrItems] = useState(bmrData);\n  ss; // console.log(countingBMR(90, 184, 22, \"Mężczyzna\", \"Aktywny\", \"Utrzymać wagę\"));\n\n  const handleSubmit = data => {\n    const results = countingBMR(data.weight, data.height, data.age, data.sex, data.activity, data.plan);\n    calculatorBMR.resultBMR = Math.round(results);\n  };\n\n  const memoFormItems = useMemo(() => {\n    return bmrItems.map(item => {\n      switch (item.variant) {\n        case \"input\":\n          return /*#__PURE__*/React.createElement(Input, {\n            key: item.id,\n            name: item.name,\n            label: item.label,\n            type: item.type,\n            required: item.required,\n            placeholder: item.placeholder,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 28\n            }\n          });\n\n        case \"dropdown\":\n          return /*#__PURE__*/React.createElement(Dropdown, {\n            name: item.name,\n            label: item.label,\n            options: item.options,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 28\n            }\n          });\n\n        default:\n          return;\n      }\n    });\n  }, [bmrItems]);\n  return /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit,\n    btnText: \"Oblicz\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, memoFormItems);\n});\nexport default BMRCounting;","map":{"version":3,"sources":["C:/Users/michal/Desktop/PRACA INMNZ/frontend/src/containers/BMRCounting/BMRCounting.js"],"names":["observer","React","useMemo","useState","Dropdown","Form","Input","calculatorBMR","bmrData","countingBMR","BMRCounting","bmrItems","setBmrItems","ss","handleSubmit","data","results","weight","height","age","sex","activity","plan","resultBMR","Math","round","memoFormItems","map","item","variant","id","name","label","type","required","placeholder","options"],"mappings":";AAAA,SAASA,QAAT,QAAyB,iBAAzB;AACA,OAAOC,KAAP,IAAgBC,OAAhB,EAAyBC,QAAzB,QAAyC,OAAzC;AACA,OAAOC,QAAP,MAAqB,iDAArB;AACA,OAAOC,IAAP,MAAiB,yCAAjB;AACA,OAAOC,KAAP,MAAkB,2CAAlB;AACA,SAASC,aAAT,QAA8B,yCAA9B;AACA,SAASC,OAAT,EAAkBC,WAAlB,QAAqC,mBAArC;AAEA,MAAMC,WAAW,GAAGV,QAAQ,CAAC,MAAM;AAE/B,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAACK,OAAD,CAAxC;AACJK,EAAAA,EAAE,CAHiC,CAI/B;;AACA,QAAMC,YAAY,GAAIC,IAAD,IAAU;AAC3B,UAAMC,OAAO,GAAGP,WAAW,CAACM,IAAI,CAACE,MAAN,EAAcF,IAAI,CAACG,MAAnB,EAA2BH,IAAI,CAACI,GAAhC,EAAqCJ,IAAI,CAACK,GAA1C,EAA+CL,IAAI,CAACM,QAApD,EAA8DN,IAAI,CAACO,IAAnE,CAA3B;AACAf,IAAAA,aAAa,CAACgB,SAAd,GAA0BC,IAAI,CAACC,KAAL,CAAWT,OAAX,CAA1B;AACH,GAHD;;AAIA,QAAMU,aAAa,GAAGxB,OAAO,CAAC,MAAM;AAChC,WAAOS,QAAQ,CAACgB,GAAT,CAAcC,IAAD,IAAU;AAC1B,cAAQA,IAAI,CAACC,OAAb;AACI,aAAK,OAAL;AACI,8BAAO,oBAAC,KAAD;AACH,YAAA,GAAG,EAAED,IAAI,CAACE,EADP;AAEH,YAAA,IAAI,EAAEF,IAAI,CAACG,IAFR;AAGH,YAAA,KAAK,EAAEH,IAAI,CAACI,KAHT;AAIH,YAAA,IAAI,EAAEJ,IAAI,CAACK,IAJR;AAKH,YAAA,QAAQ,EAAEL,IAAI,CAACM,QALZ;AAMH,YAAA,WAAW,EAAEN,IAAI,CAACO,WANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;;AAQJ,aAAK,UAAL;AACI,8BAAO,oBAAC,QAAD;AACH,YAAA,IAAI,EAAEP,IAAI,CAACG,IADR;AAEH,YAAA,KAAK,EAAEH,IAAI,CAACI,KAFT;AAGH,YAAA,OAAO,EAAEJ,IAAI,CAACQ,OAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;;AAKJ;AACI;AAjBR;AAmBH,KApBM,CAAP;AAqBH,GAtB4B,EAsB1B,CAACzB,QAAD,CAtB0B,CAA7B;AAwBA,sBACI,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAEG,YAAhB;AAA8B,IAAA,OAAO,EAAC,QAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKY,aADL,CADJ;AAKH,CAtC2B,CAA5B;AAwCA,eAAehB,WAAf","sourcesContent":["import { observer } from \"mobx-react-lite\";\nimport React, { useMemo, useState } from \"react\";\nimport Dropdown from \"../../components/AllAboutForm/Dropdown/Dropdown\";\nimport Form from \"../../components/AllAboutForm/Form/Form\";\nimport Input from \"../../components/AllAboutForm/Input/Input\";\nimport { calculatorBMR } from \"../../store/CalculatorBMR/CalculatorBMR\";\nimport { bmrData, countingBMR } from \"./BMRCountingData\";\n\nconst BMRCounting = observer(() => {\n\n    const [bmrItems, setBmrItems] = useState(bmrData);\nss\n    // console.log(countingBMR(90, 184, 22, \"Mężczyzna\", \"Aktywny\", \"Utrzymać wagę\"));\n    const handleSubmit = (data) => {\n        const results = countingBMR(data.weight, data.height, data.age, data.sex, data.activity, data.plan);\n        calculatorBMR.resultBMR = Math.round(results);\n    }\n    const memoFormItems = useMemo(() => {\n        return bmrItems.map((item) => {\n            switch (item.variant) {\n                case \"input\":\n                    return <Input\n                        key={item.id}\n                        name={item.name}\n                        label={item.label}\n                        type={item.type}\n                        required={item.required}\n                        placeholder={item.placeholder}\n                    />\n                case \"dropdown\":\n                    return <Dropdown\n                        name={item.name}\n                        label={item.label}\n                        options={item.options}\n                    />\n                default:\n                    return;\n            }\n        })\n    }, [bmrItems])\n\n    return (\n        <Form onSubmit={handleSubmit} btnText=\"Oblicz\">\n            {memoFormItems}\n        </Form>\n    )\n})\n\nexport default BMRCounting;"]},"metadata":{},"sourceType":"module"}